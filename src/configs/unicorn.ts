import type { ConfigArray } from 'typescript-eslint';
import type { UnicornOptions } from '../types';

import unicornPlugin from 'eslint-plugin-unicorn';
import tseslint from 'typescript-eslint';

/**
 * Generates a configuration array for the Unicorn plugin with the specified options.
 *
 * @param [options] - The options to customize the Unicorn rules.
 * @returns The configuration array for the Unicorn plugin.
 */
export function unicorn(options: UnicornOptions = {}): ConfigArray {
  return tseslint.config({
    name: 'fabdeh/unicorn/rules',
    plugins: { unicorn: unicornPlugin },
    rules: {
      ...(options.allRecommended
        ? unicornPlugin.configs['flat/recommended'].rules
        : {
            'unicorn/catch-error-name': 'error',
            'unicorn/consistent-empty-array-spread': 'error',
            'unicorn/consistent-existence-index-check': 'error',
            'unicorn/consistent-function-scoping': ['error', { checkArrowFunctions: false }],
            'unicorn/custom-error-definition': 'error',
            'unicorn/error-message': 'error',
            'unicorn/escape-case': 'error',
            'unicorn/explicit-length-check': 'error',
            'unicorn/filename-case': ['error', { case: 'kebabCase' }],
            'unicorn/new-for-builtins': 'error',
            'unicorn/no-abusive-eslint-disable': 'error',
            'unicorn/no-anonymous-default-export': 'error',
            'unicorn/no-array-for-each': 'error',
            'unicorn/no-array-method-this-argument': 'error',
            'unicorn/no-array-push-push': 'error',
            'unicorn/no-array-reduce': 'error',
            'unicorn/no-await-expression-member': 'error',
            'unicorn/no-await-in-promise-methods': 'error',
            'unicorn/no-document-cookie': 'error',
            'unicorn/no-empty-file': 'error',
            'unicorn/no-for-loop': 'error',
            'unicorn/no-hex-escape': 'error',
            'unicorn/no-instanceof-array': 'error',
            'unicorn/no-invalid-fetch-options': 'error',
            'unicorn/no-invalid-remove-event-listener': 'error',
            'unicorn/no-length-as-slice-end': 'error',
            'unicorn/no-lonely-if': 'error',
            'unicorn/no-magic-array-flat-depth': 'error',
            'unicorn/no-negated-condition': 'error',
            'unicorn/no-negation-in-equality-check': 'error',
            'unicorn/no-new-array': 'error',
            'unicorn/no-new-buffer': 'error',
            'unicorn/no-null': 'error',
            'unicorn/no-process-exit': 'error',
            'unicorn/no-single-promise-in-promise-methods': 'error',
            'unicorn/no-thenable': 'error',
            'unicorn/no-this-assignment': 'error',
            'unicorn/no-typeof-undefined': 'error',
            'unicorn/no-unnecessary-await': 'error',
            'unicorn/no-unused-properties': 'warn',
            'unicorn/no-useless-fallback-in-spread': 'error',
            'unicorn/no-useless-length-check': 'error',
            'unicorn/no-useless-promise-resolve-reject': 'error',
            'unicorn/no-useless-spread': 'error',
            'unicorn/no-useless-switch-case': 'error',
            'unicorn/no-zero-fractions': 'error',
            'unicorn/number-literal-case': 'error',
            'unicorn/numeric-separators-style': 'error',
            'unicorn/prefer-array-find': 'error',
            'unicorn/prefer-array-flat': 'error',
            'unicorn/prefer-array-flat-map': 'error',
            'unicorn/prefer-array-index-of': 'error',
            'unicorn/prefer-array-some': 'error',
            'unicorn/prefer-at': 'error',
            'unicorn/prefer-blob-reading-methods': 'error',
            'unicorn/prefer-code-point': 'error',
            'unicorn/prefer-date-now': 'error',
            'unicorn/prefer-default-parameters': 'error',
            'unicorn/prefer-export-from': 'error',
            'unicorn/prefer-includes': 'error',
            'unicorn/prefer-keyboard-event-key': 'error',
            'unicorn/prefer-logical-operator-over-ternary': 'error',
            'unicorn/prefer-math-min-max': 'error',
            'unicorn/prefer-math-trunc': 'error',
            'unicorn/prefer-modern-math-apis': 'error',
            'unicorn/prefer-negative-index': 'error',
            'unicorn/prefer-node-protocol': 'error',
            'unicorn/prefer-number-properties': 'error',
            'unicorn/prefer-object-from-entries': 'error',
            'unicorn/prefer-optional-catch-binding': 'error',
            'unicorn/prefer-query-selector': 'error',
            'unicorn/prefer-regexp-test': 'error',
            'unicorn/prefer-set-has': 'error',
            'unicorn/prefer-set-size': 'error',
            'unicorn/prefer-spread': 'error',
            'unicorn/prefer-string-raw': 'error',
            'unicorn/prefer-string-replace-all': 'error',
            'unicorn/prefer-string-slice': 'error',
            'unicorn/prefer-string-starts-ends-with': 'error',
            'unicorn/prefer-string-trim-start-end': 'error',
            'unicorn/prefer-structured-clone': 'error',
            'unicorn/prefer-switch': 'error',
            'unicorn/prefer-ternary': 'error',
            'unicorn/prefer-type-error': 'error',
            'unicorn/require-array-join-separator': 'error',
            'unicorn/require-number-to-fixed-digits-argument': 'error',
            'unicorn/require-post-message-target-origin': 'error',
            'unicorn/throw-new-error': 'error',
          }),
    },
  });
}
